plugins {
	id 'org.springframework.boot' version '2.4.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'war'
	id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10' // Querydsl 플러그인 추가
}

group = 'com.springboot_ex'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

//SpringBoot는 Auto Configuration이란 자동설정 기능 지님 : 의존성을 추가한 라이브러리에 관련된 설정을 자동을 추가함(버전 충돌이 없도록)
//예를 들어 아래 JPA의존성을 추가해 관련 라이브러리가 추가 되면 해당 라이브러리 설정을 자동으로 찾아 실행하는데,
//만일 사용하는 db의 설정이 없다면 실행문제가 발생

dependencies {
	//Spring JPA 의존성
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	//사용하는 DB(MariaDB)를 위한 JDBC드라이버 의존성
	compile group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.7.0'
	//Querydsl 의존성 추가
	implementation 'com.querydsl:querydsl-jpa'

	//RESTful 개발을 위한 의존성
	implementation 'org.springframework.boot:spring-boot-starter-web'

	//Swagger2 restAPI 문서에 필요한 데이터를 검색해 JSON 데이터로 만들어줌
	compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
	//Swagger2 위 JSON 데이터를 설정된 UI템플릿으로 표출해줌
	compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'

	//Devtool 의존성
	//Devtool :
	// 1.property default(개발단계에 알맞는 기본설정을 맞춰줌 ex 타임리프 기본 캐싱기능 개발과정에서는 false로 해야하는데 알아서 해준다)
	// 2.automatic restart : 파일 수정 후 저장될 때 classpath 변화를 감지해 자동 서버 재시작
	// 3.live reload : js 등 수정시 자동 새로고침(브라우저 확장프로그램 필요)
	// 그밖에 Global Setting, Remote App 등
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	//lombok 관련 의존성
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	//war 개발이므로 자동 추가
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

	//스프링어플리케이션 테스트를 위함(JUnit 기본제공)
	testImplementation ('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	useJUnitPlatform()
}

// Querydsl을 위한 Gradle Task 추가
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main.java.srcDir querydslDir
}
configurations {
	querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}
// ---여기까지 Querydsl을 위한 Gradle Task 추가